{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@azure/msal-angular\";\nimport * as i2 from \"@angular/common/http\";\nexport let SecurityMsalService = /*#__PURE__*/(() => {\n  class SecurityMsalService {\n    constructor(msalService, httpClinet) {\n      this.msalService = msalService;\n      this.httpClinet = httpClinet;\n    }\n\n    logIn() {\n      this.msalService.loginPopup().subscribe(Response => {\n        this.msalService.instance.setActiveAccount(Response.account);\n      });\n    }\n\n    logOut() {\n      if (this.isLogedIn()) {\n        this.msalService.logout();\n      }\n    }\n\n    isLogedIn() {\n      sessionStorage.removeItem('msal.interaction.status');\n      return this.msalService.instance.getActiveAccount() != null;\n    }\n\n    isManager() {\n      var _a, _b;\n\n      const accountConnected = (_a = this.msalService.instance.getActiveAccount()) === null || _a === void 0 ? void 0 : _a.idTokenClaims;\n      if (((_b = accountConnected === null || accountConnected === void 0 ? void 0 : accountConnected.roles) === null || _b === void 0 ? void 0 : _b.includes('Mannger')) === true) return true;\n      return false;\n    }\n\n  }\n\n  SecurityMsalService.ɵfac = function SecurityMsalService_Factory(t) {\n    return new (t || SecurityMsalService)(i0.ɵɵinject(i1.MsalService), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  SecurityMsalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SecurityMsalService,\n    factory: SecurityMsalService.ɵfac,\n    providedIn: 'root'\n  });\n  return SecurityMsalService;\n})();","map":null,"metadata":{},"sourceType":"module"}